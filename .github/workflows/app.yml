name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11.7'  # Замените на нужную версию Python

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment
      run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env

    - name: Run tests and check coverage
      run: |
        coverage run -m pytest tests/test_app.py -v --maxfail=1 --disable-warnings
        coverage report
        coverage html
        # Опционально: сохраните отчет о покрытии как артефакт
        mkdir -p coverage_report
        cp -r htmlcov coverage_report
      continue-on-error: true  # Позволяет продолжать работу, даже если тесты не проходят
  
    - name: Upload coverage report
      if: always()  # Выполнится независимо от результата тестов
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage_report

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: yetanotheruservasya/main:tagname

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Run Docker container
      run: |
        docker run -d -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} -p 5000:5000 yetanotheruservasya/main:tagname

    - name: Test application
      run: |
        sleep 10  # Даем время контейнеру запуститься
        response=$(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:5000/)
        if [ "$response" -ne 200 ]; then
          echo "Error: Expected HTTP 200 but got HTTP $response"
          exit 1
        fi